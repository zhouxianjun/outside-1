//
// Autogenerated by Thrift Compiler (0.10.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var PublicStruct_ttypes = require('./PublicStruct_types');


var ttypes = require('./PushService_types');
//HELPER FUNCTIONS AND STRUCTURES

var PushService_pushAd_args = function(args) {
  this.bean = null;
  this.ads = null;
  if (args) {
    if (args.bean !== undefined && args.bean !== null) {
      this.bean = new PublicStruct_ttypes.PushStruct(args.bean);
    }
    if (args.ads !== undefined && args.ads !== null) {
      this.ads = Thrift.copyList(args.ads, [null]);
    }
  }
};
PushService_pushAd_args.prototype = {};
PushService_pushAd_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.bean = new PublicStruct_ttypes.PushStruct();
        this.bean.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.ads = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = input.readI32();
          this.ads.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PushService_pushAd_args.prototype.write = function(output) {
  output.writeStructBegin('PushService_pushAd_args');
  if (this.bean !== null && this.bean !== undefined) {
    output.writeFieldBegin('bean', Thrift.Type.STRUCT, 1);
    this.bean.write(output);
    output.writeFieldEnd();
  }
  if (this.ads !== null && this.ads !== undefined) {
    output.writeFieldBegin('ads', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.I32, this.ads.length);
    for (var iter7 in this.ads)
    {
      if (this.ads.hasOwnProperty(iter7))
      {
        iter7 = this.ads[iter7];
        output.writeI32(iter7);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PushService_pushAd_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof PublicStruct_ttypes.InvalidOperation) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
PushService_pushAd_result.prototype = {};
PushService_pushAd_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new PublicStruct_ttypes.InvalidOperation();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PushService_pushAd_result.prototype.write = function(output) {
  output.writeStructBegin('PushService_pushAd_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PushService_pushInstall_args = function(args) {
  this.bean = null;
  this.install = null;
  if (args) {
    if (args.bean !== undefined && args.bean !== null) {
      this.bean = new PublicStruct_ttypes.PushStruct(args.bean);
    }
    if (args.install !== undefined && args.install !== null) {
      this.install = Thrift.copyList(args.install, [null]);
    }
  }
};
PushService_pushInstall_args.prototype = {};
PushService_pushInstall_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.bean = new PublicStruct_ttypes.PushStruct();
        this.bean.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size8 = 0;
        var _rtmp312;
        this.install = [];
        var _etype11 = 0;
        _rtmp312 = input.readListBegin();
        _etype11 = _rtmp312.etype;
        _size8 = _rtmp312.size;
        for (var _i13 = 0; _i13 < _size8; ++_i13)
        {
          var elem14 = null;
          elem14 = input.readI32();
          this.install.push(elem14);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PushService_pushInstall_args.prototype.write = function(output) {
  output.writeStructBegin('PushService_pushInstall_args');
  if (this.bean !== null && this.bean !== undefined) {
    output.writeFieldBegin('bean', Thrift.Type.STRUCT, 1);
    this.bean.write(output);
    output.writeFieldEnd();
  }
  if (this.install !== null && this.install !== undefined) {
    output.writeFieldBegin('install', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.I32, this.install.length);
    for (var iter15 in this.install)
    {
      if (this.install.hasOwnProperty(iter15))
      {
        iter15 = this.install[iter15];
        output.writeI32(iter15);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PushService_pushInstall_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof PublicStruct_ttypes.InvalidOperation) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
PushService_pushInstall_result.prototype = {};
PushService_pushInstall_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new PublicStruct_ttypes.InvalidOperation();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PushService_pushInstall_result.prototype.write = function(output) {
  output.writeStructBegin('PushService_pushInstall_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PushService_pushCmdFaultRate_args = function(args) {
  this.bean = null;
  this.faultClicks = null;
  if (args) {
    if (args.bean !== undefined && args.bean !== null) {
      this.bean = new PublicStruct_ttypes.PushStruct(args.bean);
    }
    if (args.faultClicks !== undefined && args.faultClicks !== null) {
      this.faultClicks = Thrift.copyList(args.faultClicks, [PublicStruct_ttypes.FaultClickStruct]);
    }
  }
};
PushService_pushCmdFaultRate_args.prototype = {};
PushService_pushCmdFaultRate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.bean = new PublicStruct_ttypes.PushStruct();
        this.bean.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size16 = 0;
        var _rtmp320;
        this.faultClicks = [];
        var _etype19 = 0;
        _rtmp320 = input.readListBegin();
        _etype19 = _rtmp320.etype;
        _size16 = _rtmp320.size;
        for (var _i21 = 0; _i21 < _size16; ++_i21)
        {
          var elem22 = null;
          elem22 = new PublicStruct_ttypes.FaultClickStruct();
          elem22.read(input);
          this.faultClicks.push(elem22);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PushService_pushCmdFaultRate_args.prototype.write = function(output) {
  output.writeStructBegin('PushService_pushCmdFaultRate_args');
  if (this.bean !== null && this.bean !== undefined) {
    output.writeFieldBegin('bean', Thrift.Type.STRUCT, 1);
    this.bean.write(output);
    output.writeFieldEnd();
  }
  if (this.faultClicks !== null && this.faultClicks !== undefined) {
    output.writeFieldBegin('faultClicks', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.faultClicks.length);
    for (var iter23 in this.faultClicks)
    {
      if (this.faultClicks.hasOwnProperty(iter23))
      {
        iter23 = this.faultClicks[iter23];
        iter23.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PushService_pushCmdFaultRate_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof PublicStruct_ttypes.InvalidOperation) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
PushService_pushCmdFaultRate_result.prototype = {};
PushService_pushCmdFaultRate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new PublicStruct_ttypes.InvalidOperation();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PushService_pushCmdFaultRate_result.prototype.write = function(output) {
  output.writeStructBegin('PushService_pushCmdFaultRate_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PushService_pushCmdCountDown_args = function(args) {
  this.bean = null;
  this.countDowns = null;
  if (args) {
    if (args.bean !== undefined && args.bean !== null) {
      this.bean = new PublicStruct_ttypes.PushStruct(args.bean);
    }
    if (args.countDowns !== undefined && args.countDowns !== null) {
      this.countDowns = Thrift.copyList(args.countDowns, [PublicStruct_ttypes.CountDownStruct]);
    }
  }
};
PushService_pushCmdCountDown_args.prototype = {};
PushService_pushCmdCountDown_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.bean = new PublicStruct_ttypes.PushStruct();
        this.bean.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size24 = 0;
        var _rtmp328;
        this.countDowns = [];
        var _etype27 = 0;
        _rtmp328 = input.readListBegin();
        _etype27 = _rtmp328.etype;
        _size24 = _rtmp328.size;
        for (var _i29 = 0; _i29 < _size24; ++_i29)
        {
          var elem30 = null;
          elem30 = new PublicStruct_ttypes.CountDownStruct();
          elem30.read(input);
          this.countDowns.push(elem30);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PushService_pushCmdCountDown_args.prototype.write = function(output) {
  output.writeStructBegin('PushService_pushCmdCountDown_args');
  if (this.bean !== null && this.bean !== undefined) {
    output.writeFieldBegin('bean', Thrift.Type.STRUCT, 1);
    this.bean.write(output);
    output.writeFieldEnd();
  }
  if (this.countDowns !== null && this.countDowns !== undefined) {
    output.writeFieldBegin('countDowns', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.countDowns.length);
    for (var iter31 in this.countDowns)
    {
      if (this.countDowns.hasOwnProperty(iter31))
      {
        iter31 = this.countDowns[iter31];
        iter31.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PushService_pushCmdCountDown_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof PublicStruct_ttypes.InvalidOperation) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
PushService_pushCmdCountDown_result.prototype = {};
PushService_pushCmdCountDown_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new PublicStruct_ttypes.InvalidOperation();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PushService_pushCmdCountDown_result.prototype.write = function(output) {
  output.writeStructBegin('PushService_pushCmdCountDown_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PushService_pushCmdShowRate_args = function(args) {
  this.bean = null;
  this.showRates = null;
  if (args) {
    if (args.bean !== undefined && args.bean !== null) {
      this.bean = new PublicStruct_ttypes.PushStruct(args.bean);
    }
    if (args.showRates !== undefined && args.showRates !== null) {
      this.showRates = Thrift.copyList(args.showRates, [PublicStruct_ttypes.ShowRateStruct]);
    }
  }
};
PushService_pushCmdShowRate_args.prototype = {};
PushService_pushCmdShowRate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.bean = new PublicStruct_ttypes.PushStruct();
        this.bean.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size32 = 0;
        var _rtmp336;
        this.showRates = [];
        var _etype35 = 0;
        _rtmp336 = input.readListBegin();
        _etype35 = _rtmp336.etype;
        _size32 = _rtmp336.size;
        for (var _i37 = 0; _i37 < _size32; ++_i37)
        {
          var elem38 = null;
          elem38 = new PublicStruct_ttypes.ShowRateStruct();
          elem38.read(input);
          this.showRates.push(elem38);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PushService_pushCmdShowRate_args.prototype.write = function(output) {
  output.writeStructBegin('PushService_pushCmdShowRate_args');
  if (this.bean !== null && this.bean !== undefined) {
    output.writeFieldBegin('bean', Thrift.Type.STRUCT, 1);
    this.bean.write(output);
    output.writeFieldEnd();
  }
  if (this.showRates !== null && this.showRates !== undefined) {
    output.writeFieldBegin('showRates', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.showRates.length);
    for (var iter39 in this.showRates)
    {
      if (this.showRates.hasOwnProperty(iter39))
      {
        iter39 = this.showRates[iter39];
        iter39.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PushService_pushCmdShowRate_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof PublicStruct_ttypes.InvalidOperation) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
PushService_pushCmdShowRate_result.prototype = {};
PushService_pushCmdShowRate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new PublicStruct_ttypes.InvalidOperation();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PushService_pushCmdShowRate_result.prototype.write = function(output) {
  output.writeStructBegin('PushService_pushCmdShowRate_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PushService_pushCmdAdContentChange_args = function(args) {
  this.bean = null;
  this.change = null;
  if (args) {
    if (args.bean !== undefined && args.bean !== null) {
      this.bean = new PublicStruct_ttypes.PushStruct(args.bean);
    }
    if (args.change !== undefined && args.change !== null) {
      this.change = new PublicStruct_ttypes.AdContentStruct(args.change);
    }
  }
};
PushService_pushCmdAdContentChange_args.prototype = {};
PushService_pushCmdAdContentChange_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.bean = new PublicStruct_ttypes.PushStruct();
        this.bean.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.change = new PublicStruct_ttypes.AdContentStruct();
        this.change.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PushService_pushCmdAdContentChange_args.prototype.write = function(output) {
  output.writeStructBegin('PushService_pushCmdAdContentChange_args');
  if (this.bean !== null && this.bean !== undefined) {
    output.writeFieldBegin('bean', Thrift.Type.STRUCT, 1);
    this.bean.write(output);
    output.writeFieldEnd();
  }
  if (this.change !== null && this.change !== undefined) {
    output.writeFieldBegin('change', Thrift.Type.STRUCT, 2);
    this.change.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PushService_pushCmdAdContentChange_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof PublicStruct_ttypes.InvalidOperation) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
PushService_pushCmdAdContentChange_result.prototype = {};
PushService_pushCmdAdContentChange_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new PublicStruct_ttypes.InvalidOperation();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PushService_pushCmdAdContentChange_result.prototype.write = function(output) {
  output.writeStructBegin('PushService_pushCmdAdContentChange_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PushService_page_args = function(args) {
  this.page = null;
  if (args) {
    if (args.page !== undefined && args.page !== null) {
      this.page = new PublicStruct_ttypes.PageParamStruct(args.page);
    }
  }
};
PushService_page_args.prototype = {};
PushService_page_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.page = new PublicStruct_ttypes.PageParamStruct();
        this.page.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PushService_page_args.prototype.write = function(output) {
  output.writeStructBegin('PushService_page_args');
  if (this.page !== null && this.page !== undefined) {
    output.writeFieldBegin('page', Thrift.Type.STRUCT, 1);
    this.page.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PushService_page_result = function(args) {
  this.success = null;
  this.ex = null;
  if (args instanceof PublicStruct_ttypes.InvalidOperation) {
    this.ex = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new PublicStruct_ttypes.PageStruct(args.success);
    }
    if (args.ex !== undefined && args.ex !== null) {
      this.ex = args.ex;
    }
  }
};
PushService_page_result.prototype = {};
PushService_page_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new PublicStruct_ttypes.PageStruct();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.ex = new PublicStruct_ttypes.InvalidOperation();
        this.ex.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

PushService_page_result.prototype.write = function(output) {
  output.writeStructBegin('PushService_page_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.ex !== null && this.ex !== undefined) {
    output.writeFieldBegin('ex', Thrift.Type.STRUCT, 1);
    this.ex.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var PushServiceClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this._seqid = 0;
    this._reqs = {};
};
PushServiceClient.prototype = {};
PushServiceClient.prototype.seqid = function() { return this._seqid; };
PushServiceClient.prototype.new_seqid = function() { return this._seqid += 1; };
PushServiceClient.prototype.pushAd = function(bean, ads, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_pushAd(bean, ads);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_pushAd(bean, ads);
  }
};

PushServiceClient.prototype.send_pushAd = function(bean, ads) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('pushAd', Thrift.MessageType.CALL, this.seqid());
  var args = new PushService_pushAd_args();
  args.bean = bean;
  args.ads = ads;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

PushServiceClient.prototype.recv_pushAd = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PushService_pushAd_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('pushAd failed: unknown result');
};
PushServiceClient.prototype.pushInstall = function(bean, install, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_pushInstall(bean, install);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_pushInstall(bean, install);
  }
};

PushServiceClient.prototype.send_pushInstall = function(bean, install) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('pushInstall', Thrift.MessageType.CALL, this.seqid());
  var args = new PushService_pushInstall_args();
  args.bean = bean;
  args.install = install;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

PushServiceClient.prototype.recv_pushInstall = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PushService_pushInstall_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('pushInstall failed: unknown result');
};
PushServiceClient.prototype.pushCmdFaultRate = function(bean, faultClicks, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_pushCmdFaultRate(bean, faultClicks);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_pushCmdFaultRate(bean, faultClicks);
  }
};

PushServiceClient.prototype.send_pushCmdFaultRate = function(bean, faultClicks) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('pushCmdFaultRate', Thrift.MessageType.CALL, this.seqid());
  var args = new PushService_pushCmdFaultRate_args();
  args.bean = bean;
  args.faultClicks = faultClicks;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

PushServiceClient.prototype.recv_pushCmdFaultRate = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PushService_pushCmdFaultRate_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('pushCmdFaultRate failed: unknown result');
};
PushServiceClient.prototype.pushCmdCountDown = function(bean, countDowns, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_pushCmdCountDown(bean, countDowns);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_pushCmdCountDown(bean, countDowns);
  }
};

PushServiceClient.prototype.send_pushCmdCountDown = function(bean, countDowns) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('pushCmdCountDown', Thrift.MessageType.CALL, this.seqid());
  var args = new PushService_pushCmdCountDown_args();
  args.bean = bean;
  args.countDowns = countDowns;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

PushServiceClient.prototype.recv_pushCmdCountDown = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PushService_pushCmdCountDown_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('pushCmdCountDown failed: unknown result');
};
PushServiceClient.prototype.pushCmdShowRate = function(bean, showRates, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_pushCmdShowRate(bean, showRates);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_pushCmdShowRate(bean, showRates);
  }
};

PushServiceClient.prototype.send_pushCmdShowRate = function(bean, showRates) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('pushCmdShowRate', Thrift.MessageType.CALL, this.seqid());
  var args = new PushService_pushCmdShowRate_args();
  args.bean = bean;
  args.showRates = showRates;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

PushServiceClient.prototype.recv_pushCmdShowRate = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PushService_pushCmdShowRate_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('pushCmdShowRate failed: unknown result');
};
PushServiceClient.prototype.pushCmdAdContentChange = function(bean, change, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_pushCmdAdContentChange(bean, change);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_pushCmdAdContentChange(bean, change);
  }
};

PushServiceClient.prototype.send_pushCmdAdContentChange = function(bean, change) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('pushCmdAdContentChange', Thrift.MessageType.CALL, this.seqid());
  var args = new PushService_pushCmdAdContentChange_args();
  args.bean = bean;
  args.change = change;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

PushServiceClient.prototype.recv_pushCmdAdContentChange = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PushService_pushCmdAdContentChange_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('pushCmdAdContentChange failed: unknown result');
};
PushServiceClient.prototype.page = function(page, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_page(page);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_page(page);
  }
};

PushServiceClient.prototype.send_page = function(page) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('page', Thrift.MessageType.CALL, this.seqid());
  var args = new PushService_page_args();
  args.page = page;
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

PushServiceClient.prototype.recv_page = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new PushService_page_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.ex) {
    return callback(result.ex);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('page failed: unknown result');
};
var PushServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler;
}
;
PushServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}
;
PushServiceProcessor.prototype.process_pushAd = function(seqid, input, output) {
  var args = new PushService_pushAd_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.pushAd.length === 2) {
    Q.fcall(this._handler.pushAd, args.bean, args.ads)
      .then(function(result) {
        var result_obj = new PushService_pushAd_result({success: result});
        output.writeMessageBegin("pushAd", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof PublicStruct_ttypes.InvalidOperation) {
          result = new PushService_pushAd_result(err);
          output.writeMessageBegin("pushAd", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("pushAd", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.pushAd(args.bean, args.ads, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof PublicStruct_ttypes.InvalidOperation) {
        result_obj = new PushService_pushAd_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("pushAd", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("pushAd", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PushServiceProcessor.prototype.process_pushInstall = function(seqid, input, output) {
  var args = new PushService_pushInstall_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.pushInstall.length === 2) {
    Q.fcall(this._handler.pushInstall, args.bean, args.install)
      .then(function(result) {
        var result_obj = new PushService_pushInstall_result({success: result});
        output.writeMessageBegin("pushInstall", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof PublicStruct_ttypes.InvalidOperation) {
          result = new PushService_pushInstall_result(err);
          output.writeMessageBegin("pushInstall", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("pushInstall", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.pushInstall(args.bean, args.install, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof PublicStruct_ttypes.InvalidOperation) {
        result_obj = new PushService_pushInstall_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("pushInstall", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("pushInstall", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PushServiceProcessor.prototype.process_pushCmdFaultRate = function(seqid, input, output) {
  var args = new PushService_pushCmdFaultRate_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.pushCmdFaultRate.length === 2) {
    Q.fcall(this._handler.pushCmdFaultRate, args.bean, args.faultClicks)
      .then(function(result) {
        var result_obj = new PushService_pushCmdFaultRate_result({success: result});
        output.writeMessageBegin("pushCmdFaultRate", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof PublicStruct_ttypes.InvalidOperation) {
          result = new PushService_pushCmdFaultRate_result(err);
          output.writeMessageBegin("pushCmdFaultRate", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("pushCmdFaultRate", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.pushCmdFaultRate(args.bean, args.faultClicks, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof PublicStruct_ttypes.InvalidOperation) {
        result_obj = new PushService_pushCmdFaultRate_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("pushCmdFaultRate", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("pushCmdFaultRate", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PushServiceProcessor.prototype.process_pushCmdCountDown = function(seqid, input, output) {
  var args = new PushService_pushCmdCountDown_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.pushCmdCountDown.length === 2) {
    Q.fcall(this._handler.pushCmdCountDown, args.bean, args.countDowns)
      .then(function(result) {
        var result_obj = new PushService_pushCmdCountDown_result({success: result});
        output.writeMessageBegin("pushCmdCountDown", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof PublicStruct_ttypes.InvalidOperation) {
          result = new PushService_pushCmdCountDown_result(err);
          output.writeMessageBegin("pushCmdCountDown", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("pushCmdCountDown", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.pushCmdCountDown(args.bean, args.countDowns, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof PublicStruct_ttypes.InvalidOperation) {
        result_obj = new PushService_pushCmdCountDown_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("pushCmdCountDown", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("pushCmdCountDown", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PushServiceProcessor.prototype.process_pushCmdShowRate = function(seqid, input, output) {
  var args = new PushService_pushCmdShowRate_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.pushCmdShowRate.length === 2) {
    Q.fcall(this._handler.pushCmdShowRate, args.bean, args.showRates)
      .then(function(result) {
        var result_obj = new PushService_pushCmdShowRate_result({success: result});
        output.writeMessageBegin("pushCmdShowRate", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof PublicStruct_ttypes.InvalidOperation) {
          result = new PushService_pushCmdShowRate_result(err);
          output.writeMessageBegin("pushCmdShowRate", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("pushCmdShowRate", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.pushCmdShowRate(args.bean, args.showRates, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof PublicStruct_ttypes.InvalidOperation) {
        result_obj = new PushService_pushCmdShowRate_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("pushCmdShowRate", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("pushCmdShowRate", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PushServiceProcessor.prototype.process_pushCmdAdContentChange = function(seqid, input, output) {
  var args = new PushService_pushCmdAdContentChange_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.pushCmdAdContentChange.length === 2) {
    Q.fcall(this._handler.pushCmdAdContentChange, args.bean, args.change)
      .then(function(result) {
        var result_obj = new PushService_pushCmdAdContentChange_result({success: result});
        output.writeMessageBegin("pushCmdAdContentChange", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof PublicStruct_ttypes.InvalidOperation) {
          result = new PushService_pushCmdAdContentChange_result(err);
          output.writeMessageBegin("pushCmdAdContentChange", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("pushCmdAdContentChange", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.pushCmdAdContentChange(args.bean, args.change, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof PublicStruct_ttypes.InvalidOperation) {
        result_obj = new PushService_pushCmdAdContentChange_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("pushCmdAdContentChange", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("pushCmdAdContentChange", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
PushServiceProcessor.prototype.process_page = function(seqid, input, output) {
  var args = new PushService_page_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.page.length === 1) {
    Q.fcall(this._handler.page, args.page)
      .then(function(result) {
        var result_obj = new PushService_page_result({success: result});
        output.writeMessageBegin("page", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        if (err instanceof PublicStruct_ttypes.InvalidOperation) {
          result = new PushService_page_result(err);
          output.writeMessageBegin("page", Thrift.MessageType.REPLY, seqid);
        } else {
          result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
          output.writeMessageBegin("page", Thrift.MessageType.EXCEPTION, seqid);
        }
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.page(args.page, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof PublicStruct_ttypes.InvalidOperation) {
        result_obj = new PushService_page_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("page", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("page", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
